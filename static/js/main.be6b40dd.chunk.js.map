{"version":3,"sources":["utils/styles/SearchStyles.js","utils/constants.js","redux/snackbar/snackbarSlice.js","redux/main/mainSlice.js","components/Search.js","redux/favorites/favoritesSlice.js","utils/styles/MainStyles.js","utils/styles/DayStyles.js","components/DayComponent.js","pages/WeatherPage.js","utils/styles/CityStyles.js","components/CityComponent.js","utils/styles/FavoritesStyles.js","pages/FavoritesPage.js","utils/styles/TopBarStyles.js","components/TopBar.js","utils/styles/SnackbarStyles.js","components/Snackbar.js","assets/images/glenn-carstens-peters-sunny.jpg","assets/images/pexels-scott-webb-clear.jpg","assets/images/kumiko-shimizu-rainy.jpg","assets/images/harmen-jelle-van-mourik-cloudy.jpg","assets/images/fabian-mardi-snow.jpg","assets/images/irina-iriser-sunny-dark.jpg","assets/images/kai-pilger-clear-dark.jpg","assets/images/anna-atkins-rainy-dark.jpg","assets/images/samuel-bryngelsson-cloudy-dark.jpg","assets/images/nathan-fertig-snow-dark.jpg","assets/images/fakurian-design-fav.jpg","assets/images/brennan-burling-fav-dark.jpg","App.js","reportWebVitals.js","redux/reducers.js","index.js","redux/store.js"],"names":["useStyles","makeStyles","theme","search","fill","palette","input","CustomizedAutocomplete","withStyles","popupIndicatorOpen","transform","root","borderBottom","stroke","borderBottomColor","strokeBefore","color","text","main","inputRoot","placeholder","paper","backgroundColor","background","option","rowHover","listbox","width","height","boxShadow","borderRadius","Autocomplete","API_KEY","process","BASE_URL","REPOSITORY_NAME","END_POINT","darkThemeColors","appbar","container","yellow","menu","day","favorite","favoriteHover","button","toggleSelected","toggleSelectedHover","strokeHover","lightThemeColors","primary","snackbarSlice","createSlice","name","initialState","visible","timeout","message","type","reducers","turnOnSnackbar","state","action","payload","turnOffSnackbar","timeoutInstance","disableSnackbar","dispatch","clearTimeout","setSnackbar","setTimeout","actions","mainSlice","themeMode","citiesOptions","currentCity","value","inputValue","currentWeather","fiveDaysForecast","setCitiesOptions","setCurrentCity","key","setCurrentWeather","setFiveDaysForecast","setThemeMode","getCitiesOptions","typedValue","a","axios","get","params","apikey","q","res","status","data","length","actionSnackbar","Search","classes","useDispatch","useSelector","useEffect","locationKey","Key","metric","DailyForecasts","mainAction","id","freeSolo","options","autoHighlight","disableClearable","getOptionLabel","LocalizedName","getOptionSelected","onChange","e","newValue","onInputChange","event","newInputValue","renderInput","TextField","inputProps","InputProps","startAdornment","className","favoritesSlice","favorites","updateFavoritesList","mainContainer","backgroundImage","props","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","minHeight","searchContainer","marginTop","maxHeight","breakpoints","down","cityAndFavContainer","mainWeatherText","fontSize","mainWeatherTextContainer","daysContainer","paddingBottom","temperatureValue","fontWeight","locationName","mainContent","padding","CustomizedToggleButton","minWidth","transition","textTransform","ToggleButton","dayContainer","dayText","textAlign","marginBottom","dayWeather","DayComponent","useState","rerendered","setRerendered","Grid","justifyContent","alignItems","clsx","animate__fadeIn","item","xs","Typography","format","Date","Temperature","Minimum","Value","Maximum","WeatherPage","useTheme","md","useMediaQuery","up","isCurrentCityInFav","setIsCurrentCityInFav","isInFav","some","element","sm","lg","Metric","selected","favoritesCopy","indexOfRemoved","findIndex","splice","newFavorite","weather","push","favoritesAction","WeatherText","spacing","map","index","cityContainer","cityText","cityWeather","CityComponent","city","only","slice","noLocations","citiesContainer","link","textDecoration","yourFavorite","FavoritesPage","to","onClick","openFavoriteCity","header","zIndex","title","marginLeft","menuLink","menuIcon","menuButton","marginRight","menuDrawer","mobileTopBar","currentPageLinkMobile","mobileDark","darkMode","darkModeSelected","currentLink","DarkModeToggleButton","TopBar","menuState","setMenuState","location","useLocation","toggleThemeMode","toggleDrawer","open","AppBar","position","elevation","direction","IconButton","SwipeableDrawer","anchor","onClose","onOpen","pathname","Toolbar","variant","top","right","iconButtonSnack","closeIconSnack","CustomizedSnackbar","snackBarObj","snackbar","Collapse","in","Alert","severity","reason","TEL_AVIV_KEY","App","mainTheme","createTheme","typography","fontFamily","join","navigator","geolocation","getCurrentPosition","showLocation","errorHandler","find","getOptions","latitude","coords","longitude","toplevel","err","code","generateBackGroundImage","weatherText","FavBG","FavBGDark","toUpperCase","includes","Sunny","Rainy","Cloudy","Snow","Clear","SunnyDark","RainyDark","CloudyDark","SnowDark","ClearDark","styleProps","ThemeProvider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createRootReducer","combineReducers","snackbarReducer","mainReducer","favoritesReducer","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureAppStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be6b40dd.chunk.js","sourcesContent":["import { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    fill: theme.palette.input.search\r\n  }\r\n}));\r\n\r\nexport const CustomizedAutocomplete = withStyles((theme) => ({\r\n  popupIndicatorOpen: {\r\n    transform: 'rotate(0deg)'\r\n  },\r\n  root: {\r\n    '& .MuiInput-underline:after': {\r\n      borderBottom: `1px solid ${theme.palette.input.stroke}`\r\n    },\r\n    '& .MuiInput-underline:hover:before': {\r\n      borderBottomColor: theme.palette.input.strokeBefore\r\n    },\r\n    '& .MuiInput-underline:before': {\r\n      borderBottom: `1px solid ${theme.palette.input.stroke}`\r\n    },\r\n    '& .MuiInputBase-input': {\r\n      color: theme.palette.text.main\r\n    }\r\n  },\r\n  inputRoot: {\r\n    '& input::placeholder': {\r\n      color: theme.palette.input.placeholder\r\n    }\r\n  },\r\n  paper: {\r\n    '&.MuiAutocomplete-paper': {\r\n      backgroundColor: theme.palette.background.paper\r\n    }\r\n  },\r\n  option: {\r\n    '&.MuiAutocomplete-option': {\r\n      color: theme.palette.text.option,\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.background.rowHover\r\n      }\r\n    }\r\n  },\r\n  listbox: {\r\n    '&.MuiAutocomplete-listbox': {\r\n      '&::-webkit-scrollbar': {\r\n        width: '3px',\r\n        height: '3px'\r\n      },\r\n      '&::-webkit-scrollbar-track': {\r\n        boxShadow: 'inset 0 0 5px #FFFFFF',\r\n        borderRadius: '10px'\r\n      },\r\n      '&::-webkit-scrollbar-thumb': {\r\n        backgroundColor: 'grey',\r\n        borderRadius: '10px'\r\n      }\r\n    }\r\n  }\r\n}))(Autocomplete);\r\n","export const API_KEY = process.env.REACT_APP_API_KEY\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\n\r\nexport const REPOSITORY_NAME = '/Sofiia-Tatarinova-24-11-2021'\r\n\r\nexport const END_POINT = {\r\n    CITIES: '/locations/v1/cities/autocomplete',\r\n    CURRENT_WEATHER: '/currentconditions/v1',\r\n    FIVE_DAYS: '/forecasts/v1/daily/5day',\r\n    GEOLOCATION: '/locations/v1/cities/geoposition/search'\r\n}\r\n\r\nexport const darkThemeColors = {\r\n    text: { main: '#F6F6F6', appbar: '#F6F6F6', container: '#1A1A1A', input: '#232323', option: '#F6F6F6', yellow: 'rgba(243, 225, 107)', menu: '#8c8cff', day: '#1A1A1A'},\r\n    background: { appbar: '#323232', main: 'rgb(255, 255, 255, .7)', paper: '#323232', favorite: '#8c8cff', favoriteHover: '#6d6dff', day: 'rgb(255, 255, 255, .8)', rowHover: '#1A1A1A'},\r\n    button: {  toggleSelected: 'rgb(255,255,255, .6)', toggleSelectedHover: 'rgb(255,255,255, .5)'},\r\n    input: {stroke: '#F6F6F6', strokeBefore: 'rgb(255, 255, 255, .7)', strokeHover: 'rgb(255, 255, 255, .3)', placeholder: 'rgb(255, 255, 255, .7)', search: '#F6F6F6'}\r\n}\r\n\r\nexport const lightThemeColors = {\r\n    text: { main: '#1A1A1A', appbar: '#323232', container: '#1A1A1A', input: '#232323', option: '#232323', yellow: '#edd700', menu: '#6d6dff', day: '#F6F6F6'},\r\n    background: { appbar: '#F6F6F6', primary: '#000000', main: 'rgba(48, 48, 48, 0.8)', paper: '#F6F6F6', favorite: 'rgba(0, 0, 255, 0.4)', favoriteHover: 'rgba(0, 0, 255, 0.5)', day: 'rgba(48, 48, 48, 0.7)', rowHover: '#F6F6F6'},\r\n    button: { toggleSelected: 'rgb(255,255,255, .6)', toggleSelectedHover: 'rgb(255,255,255, .3)' },\r\n    input: {stroke: '#000000', strokeBefore: 'rgba(48, 48, 48, 0.8)',strokeHover: 'rgb(255, 255, 255, .3)', placeholder: 'rgba(48, 48, 48, 0.8)', search: '#1A1A1A'}\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const snackbarSlice = createSlice({\r\n  name: 'snackbar',\r\n  initialState: {\r\n    visible: false,\r\n    timeout: 3000,\r\n    message: '',\r\n    type: 'error'\r\n  },\r\n  reducers: {\r\n    turnOnSnackbar: (state, action) => {\r\n      state.visible = true;\r\n      state.timeout = action.payload.timeout;\r\n      state.message = action.payload.message;\r\n      state.type = action.payload.type;\r\n    },\r\n    turnOffSnackbar: (state) => {\r\n      state.visible = false;\r\n    }\r\n  }\r\n});\r\n\r\nlet timeoutInstance = null;\r\n\r\nexport const disableSnackbar = () => (dispatch) => {\r\n  dispatch(turnOffSnackbar());\r\n  clearTimeout(timeoutInstance);\r\n};\r\n\r\nexport const setSnackbar =\r\n  ({ type, message, timeout = 2000 }) =>\r\n  (dispatch) => {\r\n    dispatch(turnOnSnackbar({ type, message, timeout }));\r\n    timeoutInstance = setTimeout(() => {\r\n      dispatch(disableSnackbar());\r\n    }, timeout);\r\n  };\r\n\r\nexport const { turnOnSnackbar, turnOffSnackbar } = snackbarSlice.actions;\r\n\r\nexport default snackbarSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { API_KEY, BASE_URL, END_POINT } from '../../utils/constants';\r\nimport * as actionSnackbar from '../snackbar/snackbarSlice';\r\n\r\nexport const mainSlice = createSlice({\r\n  name: 'main',\r\n  initialState: {\r\n    themeMode: 'light',\r\n    citiesOptions: [],\r\n    currentCity: {\r\n      value: null,\r\n      inputValue: ''\r\n    },\r\n    currentWeather: null,\r\n    fiveDaysForecast: []\r\n  },\r\n  reducers: {\r\n    setCitiesOptions: (state, action) => {\r\n      state.citiesOptions = action.payload;\r\n    },\r\n    setCurrentCity: (state, action) => {\r\n      state.currentCity[action.payload.key] = action.payload.value;\r\n    },\r\n    setCurrentWeather: (state, action) => {\r\n      state.currentWeather = action.payload;\r\n    },\r\n    setFiveDaysForecast: (state, action) => {\r\n      state.fiveDaysForecast = action.payload;\r\n    },\r\n    setThemeMode: (state, action) => {\r\n      state.themeMode = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const getCitiesOptions = (typedValue) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`${BASE_URL}${END_POINT.CITIES}`, {\r\n      params: { apikey: API_KEY, q: typedValue }\r\n    });\r\n    if (res.status === 200 && res.data.length) {\r\n      dispatch(setCitiesOptions(res.data));\r\n    }\r\n  } catch (error) {\r\n    dispatch(\r\n      actionSnackbar.setSnackbar({\r\n        type: 'error',\r\n        message: 'Something went wrong',\r\n        timeout: 3000\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const getCurrentWeather = (locationKey) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `${BASE_URL}${END_POINT.CURRENT_WEATHER}/${locationKey}`,\r\n      { params: { apikey: API_KEY } }\r\n    );\r\n    if (res.status === 200) {\r\n      dispatch(setCurrentWeather(res.data[0]));\r\n    }\r\n  } catch (error) {\r\n    dispatch(\r\n      actionSnackbar.setSnackbar({\r\n        type: 'error',\r\n        message: 'Something went wrong',\r\n        timeout: 3000\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const getFiveDaysForecast = (locationKey) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `${BASE_URL}${END_POINT.FIVE_DAYS}/${locationKey}`,\r\n      { params: { apikey: API_KEY, metric: true } }\r\n    );\r\n    if (res.status === 200) {\r\n      dispatch(setFiveDaysForecast(res.data.DailyForecasts));\r\n    }\r\n  } catch (error) {\r\n    dispatch(\r\n      actionSnackbar.setSnackbar({\r\n        type: 'error',\r\n        message: 'Something went wrong',\r\n        timeout: 3000\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nexport const {\r\n  setCitiesOptions,\r\n  setCurrentCity,\r\n  setCurrentWeather,\r\n  setFiveDaysForecast,\r\n  setThemeMode\r\n} = mainSlice.actions;\r\n\r\nexport default mainSlice.reducer;\r\n","import React, { useEffect } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { TextField } from '@material-ui/core';\r\nimport { CustomizedAutocomplete } from '../utils/styles/SearchStyles';\r\nimport * as mainAction from '../redux/main/mainSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useStyles } from '../utils/styles/SearchStyles';\r\n\r\nfunction Search() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const citiesOptions = useSelector((state) => state.main.citiesOptions);\r\n  const currentCity = useSelector((state) => state.main.currentCity);\r\n\r\n  useEffect(() => {\r\n    if (currentCity.value) {\r\n      dispatch(mainAction.getCurrentWeather(currentCity.value.Key));\r\n      dispatch(mainAction.getFiveDaysForecast(currentCity.value.Key));\r\n    }\r\n  }, [currentCity]);\r\n\r\n  const handleInputChange = (value) => {\r\n    dispatch(mainAction.setCurrentCity({ key: 'inputValue', value: value }));\r\n    dispatch(mainAction.getCitiesOptions(value));\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    dispatch(mainAction.setCurrentCity({ key: 'value', value: value }));\r\n  };\r\n\r\n  return (\r\n    <CustomizedAutocomplete\r\n      id='city'\r\n      freeSolo\r\n      options={citiesOptions}\r\n      autoHighlight\r\n      disableClearable\r\n      value={currentCity.value}\r\n      inputValue={currentCity.inputValue || ''}\r\n      getOptionLabel={(option) => option.LocalizedName || ''}\r\n      getOptionSelected={(option, value) => option.name === value}\r\n      onChange={(e, newValue) => handleChange(newValue)}\r\n      onInputChange={(event, newInputValue) => {\r\n        handleInputChange(newInputValue);\r\n      }}\r\n      renderInput={(params) => {\r\n        return (\r\n          <TextField\r\n            placeholder='Search for city'\r\n            {...params}\r\n            inputProps={{\r\n              ...params.inputProps\r\n            }}\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              startAdornment: <SearchIcon className={classes.search} />\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const favoritesSlice = createSlice({\r\n  name: 'favorites',\r\n  initialState: {\r\n    favorites: []\r\n  },\r\n  reducers: {\r\n    updateFavoritesList: (state, action) => {\r\n      state.favorites = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { updateFavoritesList } = favoritesSlice.actions;\r\n\r\nexport default favoritesSlice.reducer;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { ToggleButton } from '@material-ui/lab';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    backgroundImage: (props) => props.backgroundImage,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: '50% 50%',\r\n    backgroundSize: 'cover',\r\n    backgroundAttachment: 'fixed',\r\n    '&::-webkit-backface-visibility': 'hidden',\r\n    '&::-webkit-transform': 'translateZ(0x)',\r\n    minHeight: '100vh'\r\n  },\r\n  searchContainer: {\r\n    marginTop: '7vh',\r\n    maxHeight: '30px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: '12vh'\r\n    }\r\n  },\r\n  cityAndFavContainer: {\r\n    marginTop: '50px'\r\n  },\r\n  mainWeatherText: {\r\n    fontSize: '40px',\r\n    color: theme.palette.text.main,\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '32px'\r\n    }\r\n  },\r\n  mainWeatherTextContainer: {\r\n    marginTop: '60px'\r\n  },\r\n  daysContainer: {\r\n    marginTop: '50px',\r\n    paddingBottom: '10px'\r\n  },\r\n  temperatureValue: {\r\n    fontSize: '26px',\r\n    fontWeight: 600,\r\n    color: theme.palette.text.main,\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '22px'\r\n    }\r\n  },\r\n  locationName: {\r\n    fontSize: '24px',\r\n    fontWeight: 400,\r\n    color: theme.palette.text.main,\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '20px'\r\n    }\r\n  },\r\n  mainContent: {\r\n    padding: '15px',\r\n    borderRadius: '4px'\r\n  }\r\n}));\r\n\r\nexport const CustomizedToggleButton = withStyles((theme) => ({\r\n  root: {\r\n    minWidth: '179px',\r\n    [theme.breakpoints.down('sm')]: {\r\n      minWidth: '55px'\r\n    },\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: theme.palette.text.main,\r\n    textTransform: 'none',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.button.toggleSelectedHover,\r\n      transition: '.3s'\r\n    },\r\n    '&.MuiToggleButton-root.Mui-selected': {\r\n      backgroundColor: 'transparent',\r\n      color: theme.palette.text.main,\r\n      textTransform: 'none',\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.button.toggleSelectedHover,\r\n        transition: '.3s'\r\n      }\r\n    }\r\n  }\r\n}))(ToggleButton);\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  dayContainer: {\r\n    backgroundColor: theme.palette.background.day,\r\n    borderRadius: '4px',\r\n    padding: '40px 15px',\r\n    boxShadow: '0px 2px 4px -1px rgb(0, 0, 0, 0.2)'\r\n  },\r\n  dayText: {\r\n    textAlign: 'center',\r\n    color: theme.palette.text.day,\r\n    marginBottom: '20px',\r\n    fontWeight: 600\r\n  },\r\n  dayWeather: {\r\n    textAlign: 'center',\r\n    color: theme.palette.text.day\r\n  }\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { format } from 'date-fns';\r\nimport { useStyles } from '../utils/styles/DayStyles';\r\nimport 'animate.css';\r\nimport { useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\n\r\nfunction DayComponent(props) {\r\n  const { day } = props;\r\n  const classes = useStyles();\r\n  const [rerendered, setRerendered] = useState(false);\r\n  const currentCity = useSelector((state) => state.main.currentCity);\r\n\r\n  useEffect(() => {\r\n    setRerendered(true);\r\n    setTimeout(() => {\r\n      setRerendered(false);\r\n    }, 1000);\r\n  }, [currentCity.value]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent='center'\r\n      alignItems='center'\r\n      className={clsx(classes.dayContainer, 'animate__animated', {\r\n        animate__fadeIn: rerendered\r\n      })}\r\n    >\r\n      <Grid item xs={10}>\r\n        <Typography className={classes.dayText}>\r\n          {format(new Date(day.Date), 'EEEE')}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <Typography\r\n          className={classes.dayWeather}\r\n        >{`${day.Temperature.Minimum.Value}° / ${day.Temperature.Maximum.Value}°`}</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default DayComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport Search from '../components/Search';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as favoritesAction from '../redux/favorites/favoritesSlice';\r\nimport { useStyles, CustomizedToggleButton } from '../utils/styles/MainStyles';\r\nimport DayComponent from '../components/DayComponent';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport 'animate.css';\r\n\r\nfunction WeatherPage() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const md = useMediaQuery(theme.breakpoints.up('md'));\r\n  const currentCity = useSelector((state) => state.main.currentCity);\r\n  const currentWeather = useSelector((state) => state.main.currentWeather);\r\n  const fiveDaysForecast = useSelector((state) => state.main.fiveDaysForecast);\r\n  const favorites = useSelector((state) => state.favorites.favorites);\r\n  const [isCurrentCityInFav, setIsCurrentCityInFav] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentCity.value) {\r\n      const isInFav = favorites.some(\r\n        (element) => element.Key === currentCity.value.Key\r\n      );\r\n      setIsCurrentCityInFav(isInFav);\r\n    }\r\n  }, [currentCity, favorites]);\r\n\r\n  const handleChange = () => {\r\n    if (currentCity) {\r\n      const favoritesCopy = [...favorites];\r\n      if (!isCurrentCityInFav) {\r\n        const newFavorite = {\r\n          ...currentCity.value,\r\n          weather: currentWeather.Temperature.Metric.Value\r\n        };\r\n        favoritesCopy.push(newFavorite);\r\n      } else {\r\n        const indexOfRemoved = favoritesCopy.findIndex(\r\n          (element) => element.Key === currentCity.value.Key\r\n        );\r\n        favoritesCopy.splice(indexOfRemoved, 1);\r\n      }\r\n      dispatch(favoritesAction.updateFavoritesList(favoritesCopy));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent='center'>\r\n      <Grid item xs={12}>\r\n        <Grid container justifyContent='center'>\r\n          <Grid\r\n            item\r\n            xs={10}\r\n            sm={6}\r\n            md={4}\r\n            lg={2}\r\n            className={classes.searchContainer}\r\n          >\r\n            <Search />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {currentCity.value && currentWeather && fiveDaysForecast.length && (\r\n        <Grid item xs={10} sm={8}>\r\n          <Grid container justifyContent='center'>\r\n            <Grid item xs={12}>\r\n              <Grid\r\n                container\r\n                className={classes.cityAndFavContainer}\r\n                justifyContent='space-between'\r\n                alignItems='center'\r\n              >\r\n                <Grid item xs={6} md={5} lg={3}>\r\n                  <Grid\r\n                    container\r\n                    alignItems='center'\r\n                    className={classes.mainContent}\r\n                  >\r\n                    <Grid item xs={12}>\r\n                      <Typography className={classes.locationName}>\r\n                        {currentCity.value.LocalizedName}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        className={classes.temperatureValue}\r\n                      >{`${currentWeather.Temperature.Metric.Value} °C`}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Grid container justifyContent='flex-end'>\r\n                    <Grid item>\r\n                      <CustomizedToggleButton\r\n                        value='fav'\r\n                        selected={isCurrentCityInFav}\r\n                        onChange={handleChange}\r\n                      >\r\n                        {isCurrentCityInFav ? (\r\n                          <Grid\r\n                            container\r\n                            justifyContent={!md ? 'center' : 'flex-start'}\r\n                          >\r\n                            <FavoriteIcon\r\n                              className='animate__animated animate__heartBeat'\r\n                            />\r\n                            {md && (\r\n                              <Typography>&nbsp;&nbsp;In favorites</Typography>\r\n                            )}\r\n                          </Grid>\r\n                        ) : (\r\n                          <Grid\r\n                            container\r\n                            justifyContent={!md ? 'center' : 'flex-start'}\r\n                          >\r\n                            <FavoriteBorderIcon />\r\n                            {md && (\r\n                              <Typography>\r\n                                &nbsp;&nbsp;Add to favorites\r\n                              </Typography>\r\n                            )}\r\n                          </Grid>\r\n                        )}\r\n                      </CustomizedToggleButton>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Grid\r\n                container\r\n                justifyContent='center'\r\n                className={classes.mainWeatherTextContainer}\r\n              >\r\n                <Typography className={classes.mainWeatherText}>\r\n                  {currentWeather.WeatherText}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Grid\r\n                container\r\n                justifyContent='center'\r\n                className={classes.daysContainer}\r\n                spacing={1}\r\n              >\r\n                {fiveDaysForecast.map((day, index) => (\r\n                  <Grid item xs={12} sm={12} md={8} lg={2} key={index}>\r\n                    <DayComponent day={day} />\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default WeatherPage;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  cityContainer: {\r\n    backgroundColor: theme.palette.background.favorite,\r\n    borderRadius: '4px',\r\n    padding: '20px 15px',\r\n    boxShadow: '0px 2px 4px -1px rgb(0, 0, 0, 0.2)',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.background.favoriteHover,\r\n      transition: '.3s'\r\n    }\r\n  },\r\n  cityText: {\r\n    fontWeight: 600,\r\n    textAlign: 'center',\r\n    marginBottom: '20px',\r\n    color: theme.palette.text.day\r\n  },\r\n  cityWeather: {\r\n    textAlign: 'center',\r\n    color: theme.palette.text.day\r\n  }\r\n}));\r\n","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { useStyles } from '../utils/styles/CityStyles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nfunction CityComponent(props) {\r\n  const { city } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const lg = useMediaQuery(theme.breakpoints.only('lg'));\r\n  \r\n  return (\r\n    <Grid container className={classes.cityContainer} justifyContent='center'>\r\n      <Grid item xs={10}>\r\n        <Typography className={classes.cityText}>\r\n          {city.LocalizedName.length > 17 && lg\r\n            ? `${city.LocalizedName.slice(0, 17)}...`\r\n            : city.LocalizedName}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <Typography\r\n          className={classes.cityWeather}\r\n        >{`${city.weather} °C`}</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CityComponent;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  noLocations: {\r\n    fontSize: '36px',\r\n    color: theme.palette.text.main,\r\n    textAlign: 'center',\r\n    marginTop: '2vh',\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '22px',\r\n      marginTop: '12vh'\r\n    }\r\n  },\r\n  citiesContainer: {\r\n    marginTop: '18vh',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: '12vh'\r\n    }\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: theme.palette.text.main\r\n  },\r\n  yourFavorite: {\r\n    color: theme.palette.text.main,\r\n    textAlign: 'center',\r\n    fontSize: '36px',\r\n    marginBottom: '4vh',\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '22px'\r\n    }\r\n  }\r\n}));\r\n","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CityComponent from '../components/CityComponent';\r\nimport { useStyles } from '../utils/styles/FavoritesStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport * as mainAction from '../redux/main/mainSlice';\r\nimport { REPOSITORY_NAME } from '../utils/constants';\r\n\r\nfunction FavoritesPage() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const favorites = useSelector((state) => state.favorites.favorites);\r\n\r\n  const openFavoriteCity = (city, name) => {\r\n    dispatch(mainAction.getCitiesOptions(name));\r\n    dispatch(mainAction.setCurrentCity({ key: 'inputValue', value: name }));\r\n    dispatch(mainAction.setCurrentCity({ key: 'value', value: city }));\r\n  };\r\n\r\n  return (\r\n    <Grid container justifyContent='center'>\r\n      <Grid item xs={10} sm={8}>\r\n        <Grid container className={classes.citiesContainer}>\r\n          {favorites.length ? (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <Typography className={classes.yourFavorite}>\r\n                  Weather in your favorite cities:{' '}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Grid container spacing={1} justifyContent='center'>\r\n                  {favorites.map((city, index) => (\r\n                    <Grid item xs={12} sm={12} md={6} lg={3} key={index}>\r\n                      <Link\r\n                        to={`${REPOSITORY_NAME}/home`}\r\n                        className={classes.link}\r\n                        onClick={() => openFavoriteCity(city, city.name)}\r\n                      >\r\n                        <CityComponent city={city} />\r\n                      </Link>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Typography className={classes.noLocations}>\r\n                You don't have saved locations yet.\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FavoritesPage;\r\n","import { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { ToggleButton } from '@material-ui/lab';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: theme.palette.background.appbar,\r\n    zIndex: 3000\r\n  },\r\n  title: {\r\n    color: theme.palette.text.main,\r\n    marginLeft: '40px'\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: theme.palette.text.main,\r\n    '&:hover': {\r\n      color: theme.palette.text.menu,\r\n      transition: '.3s'\r\n    }\r\n  },\r\n  menuLink: {\r\n    textDecoration: 'none',\r\n    color: theme.palette.text.main,\r\n    padding: '20px 45px 20px 20px'\r\n  },\r\n  menuIcon: {\r\n    fontSize: 30,\r\n    fill: theme.palette.text.main\r\n  },\r\n  menuButton: {\r\n    padding: '10px',\r\n    marginRight: '20px'\r\n  },\r\n  menuDrawer: {\r\n    minWidth: '50px'\r\n  },\r\n  mobileTopBar: {\r\n    backgroundColor: theme.palette.background.appbar,\r\n    boxShadow: '0px 2px 4px -1px rgb(0, 0, 0, 0.2)'\r\n  },\r\n  currentPageLinkMobile: {\r\n    backgroundColor: theme.palette.text.menu\r\n  },\r\n  mobileDark: {\r\n    marginRight: '20px'\r\n  },\r\n  darkMode: {\r\n    transform: 'rotate(150deg)'\r\n  },\r\n  darkModeSelected: {\r\n    fill: theme.palette.text.yellow\r\n  },\r\n  currentLink: {\r\n    fontWeight: 600\r\n  }\r\n}));\r\n\r\nexport const DarkModeToggleButton = withStyles((theme) => ({\r\n  root: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '7px'\r\n    }\r\n  }\r\n}))(ToggleButton);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  AppBar,\r\n  Grid,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  SwipeableDrawer\r\n} from '@material-ui/core';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useStyles, DarkModeToggleButton } from '../utils/styles/TopBarStyles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as mainAction from '../redux/main/mainSlice';\r\nimport { REPOSITORY_NAME } from '../utils/constants';\r\n\r\nfunction TopBar() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const xs = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [menuState, setMenuState] = useState(false);\r\n  const location = useLocation();\r\n  const themeMode = useSelector((state) => state.main.themeMode);\r\n\r\n  const toggleThemeMode = () => {\r\n    const newMode = themeMode === 'light' ? 'dark' : 'light';\r\n    dispatch(mainAction.setThemeMode(newMode));\r\n  };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (\r\n      event.type === 'keydown' &&\r\n      (event.key === 'Tab' || event.key === 'Shift')\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setMenuState(open);\r\n  };\r\n\r\n  const renderDesktopTopBar = () => {\r\n    return (\r\n      <AppBar position='sticky' className={classes.header}>\r\n        <Toolbar>\r\n          <Grid container justifyContent='space-between' alignItems='center'>\r\n            <Grid item sm={4}>\r\n              <Link to={`${REPOSITORY_NAME}/home`} className={classes.link}>\r\n                <Typography variant='h6' className={classes.title}>\r\n                  Herolo Weather Task\r\n                </Typography>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Grid container justifyContent='flex-end' alignItems='center'>\r\n                <Grid item xs={4}>\r\n                  <DarkModeToggleButton\r\n                    value='mode'\r\n                    selected={themeMode === 'dark'}\r\n                    onChange={toggleThemeMode}\r\n                  >\r\n                    <Brightness3Icon\r\n                      className={clsx(classes.darkMode, {\r\n                        [classes.darkModeSelected]: themeMode === 'dark'\r\n                      })}\r\n                    />\r\n                  </DarkModeToggleButton>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Link to={`${REPOSITORY_NAME}/home`} className={classes.link}>\r\n                    <Typography\r\n                      className={clsx({\r\n                        [classes.currentLink]:\r\n                          location.pathname !== `${REPOSITORY_NAME}/favorites`\r\n                      })}\r\n                    >\r\n                      Home\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                  <Link to={`${REPOSITORY_NAME}/favorites`} className={classes.link}>\r\n                    <Typography\r\n                      className={clsx({\r\n                        [classes.currentLink]:\r\n                          location.pathname === `${REPOSITORY_NAME}/favorites`\r\n                      })}\r\n                    >\r\n                      Favorites\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  };\r\n\r\n  const renderMenuList = () => {\r\n    return (\r\n      <>\r\n        <Link\r\n          to={`${REPOSITORY_NAME}/home`}\r\n          onClick={toggleDrawer(false)}\r\n          className={clsx(classes.menuLink, {\r\n            [classes.currentPageLinkMobile]: location.pathname !== `${REPOSITORY_NAME}/favorites`\r\n          })}\r\n        >\r\n          HOME\r\n        </Link>\r\n        <Link\r\n          to={`${REPOSITORY_NAME}/favorites`}\r\n          onClick={toggleDrawer(false)}\r\n          className={clsx(classes.menuLink, {\r\n            [classes.currentPageLinkMobile]: location.pathname === `${REPOSITORY_NAME}/favorites`\r\n          })}\r\n        >\r\n          FAVORITES\r\n        </Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderMobileTopBar = () => {\r\n    return (\r\n      <AppBar position='fixed' className={classes.mobileTopBar} elevation={0}>\r\n        <Grid\r\n          container\r\n          direction='row'\r\n          alignItems='center'\r\n          justifyContent='flex-end'\r\n        >\r\n          <>\r\n            <DarkModeToggleButton\r\n              value='mode'\r\n              className={classes.mobileDark}\r\n              selected={themeMode === 'dark'}\r\n              onChange={toggleThemeMode}\r\n            >\r\n              <Brightness3Icon\r\n                className={clsx(classes.darkMode, {\r\n                  [classes.darkModeSelected]: themeMode === 'dark'\r\n                })}\r\n              />\r\n            </DarkModeToggleButton>\r\n            <IconButton\r\n              aria-label='menu'\r\n              onClick={toggleDrawer(true)}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon className={classes.menuIcon} />\r\n            </IconButton>\r\n            <SwipeableDrawer\r\n              anchor='right'\r\n              open={menuState}\r\n              onClose={toggleDrawer(false)}\r\n              onOpen={toggleDrawer(true)}\r\n            >\r\n              {renderMenuList()}\r\n            </SwipeableDrawer>\r\n          </>\r\n        </Grid>\r\n      </AppBar>\r\n    );\r\n  };\r\n\r\n  return <>{xs ? renderMobileTopBar() : renderDesktopTopBar()}</>;\r\n}\r\n\r\nexport default TopBar;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'fixed',\r\n    top: '69px',\r\n    right: '30px',\r\n    width: 'auto',\r\n    zIndex: 400,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      position: 'absolute',\r\n      zIndex: 3,\r\n      width: '90%',\r\n      right: '5%'\r\n    }\r\n  },\r\n  iconButtonSnack: {\r\n    height: '20px',\r\n    width: '20px'\r\n  },\r\n  closeIconSnack: {\r\n    color: '#FFFFFF'\r\n  }\r\n}));\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Grid, Collapse, IconButton, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actionSnackbar from '../redux/snackbar/snackbarSlice';\r\nimport { useStyles } from '../utils/styles/SnackbarStyles';\r\n\r\nfunction CustomizedSnackbar() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const snackBarObj = useSelector((state) => state.snackbar);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch(actionSnackbar.disableSnackbar());\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Collapse in={snackBarObj.visible} timeout={600}>\r\n        <Alert\r\n          elevation={4}\r\n          variant='filled'\r\n          severity={snackBarObj.type}\r\n          action={\r\n            <IconButton\r\n              className={classes.iconButtonSnack}\r\n              elevation={4}\r\n              variant='filled'\r\n              severity={snackBarObj.type}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon className={classes.closeIconSnack} />\r\n            </IconButton>\r\n          }\r\n        >\r\n          <Typography>{snackBarObj.message}</Typography>\r\n        </Alert>\r\n      </Collapse>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CustomizedSnackbar;\r\n","export default __webpack_public_path__ + \"static/media/glenn-carstens-peters-sunny.2d868bf6.jpg\";","export default __webpack_public_path__ + \"static/media/pexels-scott-webb-clear.561d37be.jpg\";","export default __webpack_public_path__ + \"static/media/kumiko-shimizu-rainy.c8b08f98.jpg\";","export default __webpack_public_path__ + \"static/media/harmen-jelle-van-mourik-cloudy.71d6792c.jpg\";","export default __webpack_public_path__ + \"static/media/fabian-mardi-snow.88d22739.jpg\";","export default __webpack_public_path__ + \"static/media/irina-iriser-sunny-dark.b82f7ccc.jpg\";","export default __webpack_public_path__ + \"static/media/kai-pilger-clear-dark.e4d8065b.jpg\";","export default __webpack_public_path__ + \"static/media/anna-atkins-rainy-dark.0d57c36f.jpg\";","export default __webpack_public_path__ + \"static/media/samuel-bryngelsson-cloudy-dark.04fc2b17.jpg\";","export default __webpack_public_path__ + \"static/media/nathan-fertig-snow-dark.1e4fb779.jpg\";","export default __webpack_public_path__ + \"static/media/fakurian-design-fav.2e106688.jpg\";","export default __webpack_public_path__ + \"static/media/brennan-burling-fav-dark.3f672ee6.jpg\";","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport WeatherPage from './pages/WeatherPage';\r\nimport FavoritesPage from './pages/FavoritesPage';\r\nimport TopBar from './components/TopBar';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\r\nimport CustomizedSnackbar from './components/Snackbar';\r\nimport { useStyles } from './utils/styles/MainStyles';\r\nimport Sunny from './assets/images/glenn-carstens-peters-sunny.jpg';\r\nimport Clear from './assets/images/pexels-scott-webb-clear.jpg';\r\nimport Rainy from './assets/images/kumiko-shimizu-rainy.jpg';\r\nimport Cloudy from './assets/images/harmen-jelle-van-mourik-cloudy.jpg';\r\nimport Snow from './assets/images/fabian-mardi-snow.jpg';\r\nimport SunnyDark from './assets/images/irina-iriser-sunny-dark.jpg';\r\nimport ClearDark from './assets/images/kai-pilger-clear-dark.jpg';\r\nimport RainyDark from './assets/images/anna-atkins-rainy-dark.jpg';\r\nimport CloudyDark from './assets/images/samuel-bryngelsson-cloudy-dark.jpg';\r\nimport SnowDark from './assets/images/nathan-fertig-snow-dark.jpg';\r\nimport FavBG from './assets/images/fakurian-design-fav.jpg';\r\nimport FavBGDark from './assets/images/brennan-burling-fav-dark.jpg';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as mainAction from './redux/main/mainSlice';\r\nimport { API_KEY, BASE_URL, END_POINT } from './utils/constants';\r\nimport * as actionSnackbar from './redux/snackbar/snackbarSlice';\r\nimport { lightThemeColors, darkThemeColors } from './utils/constants';\r\nimport { REPOSITORY_NAME } from './utils/constants';\r\n\r\nconst TEL_AVIV_KEY = '215854';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const currentWeather = useSelector((state) => state.main.currentWeather);\r\n  const themeMode = useSelector((state) => state.main.themeMode);\r\n  const location = useLocation();\r\n\r\n  const mainTheme = createTheme({\r\n    palette: themeMode === 'light' ? lightThemeColors : darkThemeColors,\r\n    typography: {\r\n      fontFamily: ['Montserrat', 'sans-serif'].join(',')\r\n    }\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(showLocation, errorHandler);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      mainAction.setCurrentCity({ key: 'inputValue', value: 'Tel Aviv' })\r\n    );\r\n    async function getOptions() {\r\n      try {\r\n        const res = await axios.get(`${BASE_URL}${END_POINT.CITIES}`, {\r\n          params: { apikey: API_KEY, q: 'Tel Aviv' }\r\n        });\r\n        if (res.status === 200 && res.data.length) {\r\n          const newValue = res.data.find(\r\n            (option) => option.Key === TEL_AVIV_KEY\r\n          );\r\n          dispatch(\r\n            mainAction.setCurrentCity({ key: 'value', value: newValue })\r\n          );\r\n        }\r\n      } catch (error) {\r\n        dispatch(\r\n          actionSnackbar.setSnackbar({\r\n            type: 'error',\r\n            message: 'Something went wrong',\r\n            timeout: 3000\r\n          })\r\n        );\r\n      }\r\n    }\r\n    getOptions();\r\n  }, []);\r\n\r\n  const showLocation = async (position) => {\r\n    const latitude = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}${END_POINT.GEOLOCATION}`, {\r\n        params: {\r\n          apikey: API_KEY,\r\n          q: `${latitude},${longitude}`,\r\n          toplevel: true\r\n        }\r\n      });\r\n      if (res.status === 200) {\r\n        dispatch(\r\n          mainAction.setCurrentCity({\r\n            key: 'inputValue',\r\n            value: res.data.LocalizedName\r\n          })\r\n        );\r\n        dispatch(mainAction.setCurrentCity({ key: 'value', value: res.data }));\r\n      }\r\n    } catch (error) {\r\n      dispatch(\r\n        actionSnackbar.setSnackbar({\r\n          type: 'error',\r\n          message: 'Something went wrong',\r\n          timeout: 3000\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const errorHandler = (err) => {\r\n    if (err.code === 2) {\r\n      dispatch(\r\n        actionSnackbar.setSnackbar({\r\n          type: 'error',\r\n          message: 'Position is unavailable!',\r\n          timeout: 3000\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const generateBackGroundImage = (weatherText, themeMode, pathname) => {\r\n    if (pathname === `${REPOSITORY_NAME}/favorites`) {\r\n      if (themeMode === 'light') {\r\n        return `url(${FavBG})`;\r\n      } else {\r\n        return `url(${FavBGDark})`;\r\n      }\r\n    } else {\r\n      if (themeMode === 'light') {\r\n        if (weatherText.toUpperCase().includes('SUN')) {\r\n          return `url(${Sunny})`;\r\n        } else if (weatherText.toUpperCase().includes('RAIN')) {\r\n          return `url(${Rainy})`;\r\n        } else if (\r\n          weatherText.toUpperCase().includes('CLOUD') ||\r\n          weatherText.toUpperCase().includes('OVERCAST')\r\n        ) {\r\n          return `url(${Cloudy})`;\r\n        } else if (weatherText.toUpperCase().includes('SNOW')) {\r\n          return `url(${Snow})`;\r\n        } else {\r\n          return `url(${Clear})`;\r\n        }\r\n      } else {\r\n        if (weatherText.toUpperCase().includes('SUN')) {\r\n          return `url(${SunnyDark})`;\r\n        } else if (weatherText.toUpperCase().includes('RAIN')) {\r\n          return `url(${RainyDark})`;\r\n        } else if (\r\n          weatherText.toUpperCase().includes('CLOUD') ||\r\n          weatherText.toUpperCase().includes('OVERCAST')\r\n        ) {\r\n          return `url(${CloudyDark})`;\r\n        } else if (weatherText.toUpperCase().includes('SNOW')) {\r\n          return `url(${SnowDark})`;\r\n        } else {\r\n          return `url(${ClearDark})`;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const styleProps = {\r\n    backgroundImage: currentWeather\r\n      ? generateBackGroundImage(\r\n          currentWeather.WeatherText,\r\n          themeMode,\r\n          location.pathname\r\n        )\r\n      : generateBackGroundImage('', themeMode, location.pathname)\r\n  };\r\n  const classes = useStyles(styleProps);\r\n\r\n  return (\r\n    <ThemeProvider theme={mainTheme}>\r\n      <div className={classes.mainContainer}>\r\n        <TopBar />\r\n        <CustomizedSnackbar />\r\n        <Switch>\r\n          <Route exact path={`${REPOSITORY_NAME}/`} component={WeatherPage} />\r\n          <Route exact path={`${REPOSITORY_NAME}/home`} component={WeatherPage} />\r\n          <Route exact path={`${REPOSITORY_NAME}/favorites`} component={FavoritesPage} />\r\n        </Switch>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport mainReducer from '../redux/main/mainSlice';\r\nimport favoritesReducer from '../redux/favorites/favoritesSlice';\r\nimport snackbarReducer from '../redux/snackbar/snackbarSlice';\r\n\r\n\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    snackbar: snackbarReducer,\r\n    main: mainReducer,\r\n    favorites: favoritesReducer\r\n  });\r\n\r\nexport default createRootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\nimport configureAppStore from './redux/store';\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = configureAppStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <Router>\r\n    <App />\r\n  </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","import { createStore, applyMiddleware } from '@reduxjs/toolkit';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createRootReducer from './reducers';\r\n\r\nexport default function configureAppStore (preloadedState) {\r\n  const middlewares = [thunkMiddleware];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewareEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n  const store = createStore(createRootReducer(), preloadedState, composedEnhancers);\r\n\r\n  return store;\r\n}"],"sourceRoot":""}